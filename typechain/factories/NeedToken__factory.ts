/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NeedToken } from "../NeedToken";

export class NeedToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides
  ): Promise<NeedToken> {
    return super.deploy(name, symbol, overrides || {}) as Promise<NeedToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): NeedToken {
    return super.attach(address) as NeedToken;
  }
  connect(signer: Signer): NeedToken__factory {
    return super.connect(signer) as NeedToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NeedToken {
    return new Contract(address, _abi, signerOrProvider) as NeedToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultTrustScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "trustScoreOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600a6080523480156200001657600080fd5b506040516200123e3803806200123e833981810160405260408110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b9083019060208201858111156200007357600080fd5b82516401000000008111828201881017156200008e57600080fd5b82525081516020918201929091019080838360005b83811015620000bd578181015183820152602001620000a3565b50505050905090810190601f168015620000eb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010f57600080fd5b9083019060208201858111156200012557600080fd5b82516401000000008111828201881017156200014057600080fd5b82525081516020918201929091019080838360005b838110156200016f57818101518382015260200162000155565b50505050905090810190601f1680156200019d5780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001bd906003906020850190620003a8565b508051620001d3906004906020840190620003a8565b50506005805460ff19166012179055506200020733620001f262000229565b60ff16600a0a6064026200023260201b60201c565b5050336000908152600660205260409020805460ff1916600117905562000454565b60055460ff1690565b6001600160a01b0382166200028e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200029c6000838362000341565b620002b8816002546200034660201b620006d71790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002eb918390620006d762000346821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620003a1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003e057600085556200042b565b82601f10620003fb57805160ff19168380011785556200042b565b828001600101855582156200042b579182015b828111156200042b5782518255916020019190600101906200040e565b50620004399291506200043d565b5090565b5b808211156200043957600081556001016200043e565b608051610dca620004746000398061046f52806105275250610dca6000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b3146101475780630ff46782146101875780631249c58b146101bf57806318160ddd146101c757806323b872dd146101cf5780632c0ff8a414610205578063313ce5671461020d578063395093511461022b57806342966c681461025757806370a082311461027457806395d89b411461029a578063a457c2d7146102a2578063a9059cbb146102ce578063dd62ed3e146102fa575b600080fd5b6100d2610328565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010c5781810151838201526020016100f4565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101736004803603604081101561015d57600080fd5b506001600160a01b0381351690602001356103bf565b604080519115158252519081900360200190f35b6101ad6004803603602081101561019d57600080fd5b50356001600160a01b03166103dc565b60408051918252519081900360200190f35b6101736103f7565b6101ad610498565b610173600480360360608110156101e557600080fd5b506001600160a01b0381358116916020810135909116906040013561049e565b6101ad610525565b610215610549565b6040805160ff9092168252519081900360200190f35b6101736004803603604081101561024157600080fd5b506001600160a01b038135169060200135610552565b6101736004803603602081101561026d57600080fd5b50356105a0565b6101ad6004803603602081101561028a57600080fd5b50356001600160a01b03166105b4565b6100d26105cf565b610173600480360360408110156102b857600080fd5b506001600160a01b038135169060200135610630565b610173600480360360408110156102e457600080fd5b506001600160a01b038135169060200135610698565b6101ad6004803603604081101561031057600080fd5b506001600160a01b03813581169160200135166106ac565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103b45780601f10610389576101008083540402835291602001916103b4565b820191906000526020600020905b81548152906001019060200180831161039757829003601f168201915b505050505090505b90565b60006103d36103cc610736565b848461073a565b50600192915050565b6001600160a01b031660009081526007602052604090205490565b33600090815260066020526040812054819060ff161561042f57505033600090815260076020526040812080546002190190556103bc565b6104493361043b610549565b60ff16600a0a606402610826565b336000908152600660209081526040808320805460ff19166001179055600790915290207f00000000000000000000000000000000000000000000000000000000000000009055600191505090565b60025490565b60006104ab848484610904565b61051b846104b7610736565b61051685604051806060016040528060288152602001610cbe602891396001600160a01b038a166000908152600160205260408120906104f5610736565b6001600160a01b031681526020810191909152604001600020549190610a4d565b61073a565b5060019392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1690565b60006103d361055f610736565b846105168560016000610570610736565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906106d7565b60006105ac3383610ae4565b506001919050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103b45780601f10610389576101008083540402835291602001916103b4565b60006103d361063d610736565b8461051685604051806060016040528060258152602001610d706025913960016000610667610736565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a4d565b60006103d36106a5610736565b8484610904565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282018381101561072f576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b03831661077f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d4c6024913960400191505060405180910390fd5b6001600160a01b0382166107c45760405162461bcd60e51b8152600401808060200182810382526022815260200180610c766022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610881576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61088d60008383610bce565b60025461089a90826106d7565b6002556001600160a01b0382166000908152602081905260409020546108c090826106d7565b6001600160a01b038316600081815260208181526040808320949094558351858152935192939192600080516020610ce68339815191529281900390910190a35050565b6001600160a01b0383166109495760405162461bcd60e51b8152600401808060200182810382526025815260200180610d276025913960400191505060405180910390fd5b6001600160a01b03821661098e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610c316023913960400191505060405180910390fd5b610999838383610bce565b6109d681604051806060016040528060268152602001610c98602691396001600160a01b0386166000908152602081905260409020549190610a4d565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610a0590826106d7565b6001600160a01b03808416600081815260208181526040918290209490945580518581529051919392871692600080516020610ce683398151915292918290030190a3505050565b60008184841115610adc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aa1578181015183820152602001610a89565b50505050905090810190601f168015610ace5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610b295760405162461bcd60e51b8152600401808060200182810382526021815260200180610d066021913960400191505060405180910390fd5b610b3582600083610bce565b610b7281604051806060016040528060228152602001610c54602291396001600160a01b0385166000908152602081905260409020549190610a4d565b6001600160a01b038316600090815260208190526040902055600254610b989082610bd3565b6002556040805182815290516000916001600160a01b03851691600080516020610ce68339815191529181900360200190a35050565b505050565b600082821115610c2a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122007911d4b8923a62fa86165ee9cd3b3a3594477db11100fbf4fd73fe211bd5d7b64736f6c63430007060033";
